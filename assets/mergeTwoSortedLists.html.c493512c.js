import{_ as i,r as a,o as u,c as k,b as n,d as s,a as t,w as e,F as r,e as p}from"./app.afb47d0b.js";var d="/assets/mergeTwoLists.90a09194.jpeg";const m={},v={id:"\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868","aria-hidden":"true"},"#",-1),w={href:"https://leetcode-cn.com/problems/merge-two-sorted-lists/submissions/",target:"_blank",rel:"noopener noreferrer"},_=p(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><div class="language-java ext-java"><pre class="language-java"><code>\u8F93\u5165\uFF1Al1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
</code></pre></div><p><img src="`+d+'" alt=""></p><h2 id="\u9898\u89E3" tabindex="-1"><a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a> \u9898\u89E3</h2>',4),h=n("div",{class:"language-java ext-java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token function"},"mergeTwoLists"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" linked1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ListNode"),s(" linked2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("linked1 "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"||"),s(" linked2 "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" linked2 "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"?"),s(" linked1 "),n("span",{class:"token operator"},":"),s(" linked2"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" first "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("linked2"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"<"),s(" linked1"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(" linked2 "),n("span",{class:"token operator"},":"),s(" linked1"),n("span",{class:"token punctuation"},";"),s(`
        first`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"mergeTwoLists"),n("span",{class:"token punctuation"},"("),s("first"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},","),s(" first "),n("span",{class:"token operator"},"=="),s(" linked1 "),n("span",{class:"token operator"},"?"),s(" linked2 "),n("span",{class:"token operator"},":"),s(" linked1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" first"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),f=p(`<details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u793A\u4F8B</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MergeTwoSortedLists</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> val<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> next<span class="token punctuation">;</span>

        <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ListNode</span> <span class="token function">mergeTwoLists</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> linked1<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> linked2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EA\u8981\u6709\u4E00\u4E2A\u4E3Anull\uFF0C\u5C31\u8FD4\u56DE\u53E6\u4E00\u4E2A</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>linked1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> linked2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> linked2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> linked1 <span class="token operator">:</span> linked2<span class="token punctuation">;</span>
        <span class="token comment">// \u5F53\u524D\u6700\u5C0F\u8282\u70B9</span>
        <span class="token class-name">ListNode</span> first <span class="token operator">=</span> <span class="token punctuation">(</span>linked2<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> linked1<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token operator">?</span> linked2 <span class="token operator">:</span> linked1<span class="token punctuation">;</span>
        <span class="token comment">// \u4E0B\u4E00\u4E2A\u8282\u70B9</span>
        first<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>first<span class="token punctuation">.</span>next<span class="token punctuation">,</span> first <span class="token operator">==</span> linked1 <span class="token operator">?</span> linked2 <span class="token operator">:</span> linked1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> first<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> node1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> node2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> node2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,1);function y(L,g){const o=a("ExternalLinkIcon"),c=a("CodeGroupItem"),l=a("CodeGroup");return u(),k(r,null,[n("h1",v,[b,s(),n("a",w,[s("\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868"),t(o)])]),_,t(l,null,{default:e(()=>[t(c,{title:"Java"},{default:e(()=>[h]),_:1})]),_:1}),f],64)}var x=i(m,[["render",y],["__file","mergeTwoSortedLists.html.vue"]]);export{x as default};
